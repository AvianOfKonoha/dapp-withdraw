@use 'sass:map';
@use 'framework' as framework;

@keyframes tooltip-show-up {
  0% {
    scale: 0.9;
    opacity: 0.5;
  }
  100% {
    scale: 1;
    opacity: 1;
  }
}

@keyframes draw-up {
  0% {
    top: 100%;
    opacity: 0.5;
  }
  100% {
    top: 0;
    opacity: 1;
  }
}

@keyframes l4 {
  to {
    transform: rotate(1turn);
  }
}

.home {
  @include framework.flex-layout(flex, center, unset, unset);
  &__box {
    width: min(750px, 100%);
    padding: calc(#{framework.$defaultPadding} * 3);
    background-color: map.get(framework.$colors, 'gray-50');
    border-radius: calc(#{framework.$defaultRem} * 1.5);
    @include framework.grid-gap(framework.$defaultGridGap);
    &--title {
      @include framework.font-style('44', 'primary');
      font-weight: 300;
      line-height: 1;
    }
    &--title-wrap {
      @include framework.grid-column-layout(1fr auto, 10px);
      align-items: start;
    }
    &--text {
      @include framework.font-style('default', 'gray-400');
    }
    &--button {
      @include framework.flex-layout(flex, center, unset, unset);
      padding-top: calc(#{framework.$defaultPadding} * 3.5);
    }
  }
  &__button {
    &--connect {
      width: min(350px, 100%);
      @include framework.flex-layout(flex, center, center, unset);
      @include framework.font-style('18', 'gray-50');
      padding: 18px;
      height: 56px;
      span {
        transition: color 0.2s ease;
      }
      &.connected {
        span {
          color: map.get(framework.$colors, 'green-200');
        }
        svg {
          animation-name: show-up;
          animation-duration: 200ms;
          animation-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);
          animation-fill-mode: forwards;
        }
      }
      svg {
        position: absolute;
        left: 18px;
        width: 22px;
        height: 22px;
        &.loading {
          animation: pulse 2000ms infinite ease-in-out;
        }
      }
    }
  }
}

.modal {
  &__connect {
    @include framework.grid-gap(framework.$defaultGridGap);
    justify-items: center;
    .connect {
      &__header {
        text-align: center;
        font-weight: 500;
      }
      &__profile {
        padding: framework.$defaultPadding 0;
        .profile {
          height: 100px;
          width: 100px;
          border-radius: 100vh;
          background: linear-gradient(180deg, #af52de 0%, #ff2d55 100%);
          position: relative;
          .network {
            position: absolute;
            bottom: 0;
            right: 5px;
            &__icon {
              width: 25px;
              height: 25px;
              border-radius: 100vh;
              font-size: 0;
              padding: 2px;
              box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06);
              background-color: map.get(framework.$colors, 'white');
            }
            &__name {
              display: none;
              position: absolute;
              right: 0;
            }
            &:hover {
              .network {
                &__name {
                  display: block;
                  position: absolute;
                  left: calc(100% + 5px);
                  background-color: map.get(framework.$colors, 'white');
                  @include framework.font-style('12', 'gray-500');
                  padding: calc(#{framework.$defaultPadding} / 4)
                    calc(#{framework.$defaultPadding} / 4);
                  border-radius: 4px;
                  box-shadow: 0 0 3px 1px rgba(0, 0, 0, 0.06);
                  top: 0;
                  width: max-content;
                  animation-name: tooltip-show-up;
                  animation-duration: 100ms;
                  animation-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);
                  animation-fill-mode: forwards;
                }
              }
            }
          }
        }
      }
      &__amount {
        @include framework.font-style('default', 'gray-500');
        span {
          position: relative;
          &.loading {
            &:after {
              position: absolute;
              height: 100%;
              width: 100%;
              content: '';
              z-index: 10;
              background-color: map.get(framework.$colors, 'gray-100');
              border-radius: 5px;
              left: 0;
              top: 0;
            }
          }
        }
      }
      &__address {
        @include framework.font-style('18', 'primary');
        font-weight: 500;
        @include framework.flex-layout(inline-flex, unset, center, 5px);
        cursor: pointer;
        svg {
          //stroke: map.get(framework.$colors, 'gray-400');
          height: 18px;
          fill: map.get(framework.$colors, 'gray-500');
          transition: all 0.2s ease;
        }
        &:hover {
          svg {
            fill: map.get(framework.$colors, 'primary');
          }
        }
      }
      &__button {
        width: 100%;
        padding-top: framework.$defaultPadding;
        button {
          width: 100%;
          @include framework.flex-layout(flex, center, center, 5px);
          height: 50px;
          @include framework.font-style('15', 'white');
          svg {
            path {
              color: map.get(framework.$colors, 'white');
              fill: currentColor;
            }
          }
        }
      }
    }
  }
  &__withdraw {
    &--connected {
      @include framework.grid-gap(calc(#{framework.$defaultGridGap} * 2));
      max-width: 650px;
      .connected {
        &__form {
          &--step-amount {
            @include framework.grid-gap(calc(#{framework.$defaultGridGap} * 2));
          }
          &--amount {
            @include framework.grid-column-layout(
              1fr auto,
              calc(#{framework.$defaultGridGap} / 2)
            );
            position: relative;
            .amount {
              &__wrap {
                position: relative;
                border: 1px solid map.get(framework.$colors, 'gray-100');
                border-radius: calc(#{framework.$defaultRem} / 2);
                overflow: hidden;
                @include framework.grid-column-layout(
                  1fr auto,
                  framework.$defaultGridGap
                );
                align-items: center;
                &.error {
                  border-color: map.get(framework.$colors, 'red-400');
                }
                input {
                  border: unset;
                  padding: unset;
                  padding-left: framework.$defaultPadding;
                  @include framework.remove-native-focus;
                  -moz-appearance: textfield;
                  @include framework.font-style('default', 'gray-800');
                  line-height: 48px;
                  width: 100%;
                }
                &:focus,
                &:focus-within {
                  box-shadow: 0 0 0 3px
                    rgba(map.get(framework.$colors, 'black'), 0.25);
                  border-color: map.get(framework.$colors, 'gray-950');
                }
                button {
                  &[type='reset'] {
                    position: absolute;
                    height: 48px;
                    width: 32px;
                    right: 0;
                    @include framework.flex-layout(flex, center, center, unset);
                    background-color: map.get(framework.$colors, 'white');
                  }
                }
              }
              &__currency {
                padding-right: 48px;
              }
              &__max {
                height: 48px;
                width: 130px;
                @include framework.flex-layout(flex, center, center, unset);
                background-color: map.get(framework.$colors, 'gray-100');
                @include framework.font-style('default', 'gray-950');
                border-radius: 100vh;
                font-weight: 600;
              }
            }
            .error {
              &__text {
                position: absolute;
                top: 100%;
                left: 0;
                @include framework.font-style('12', 'red-400');
              }
            }
          }
          &--submit {
            padding-top: calc(#{framework.$defaultPadding} * 1.5);
            .submit {
              &__button {
                height: 48px;
                width: 100%;
                @include framework.flex-layout(flex, center, center, unset);
                background-color: map.get(framework.$colors, 'gray-200');
                border: 1px solid map.get(framework.$colors, 'gray-200');
                @include framework.font-style('default', 'gray-400');
                border-radius: 100vh;
                font-weight: 600;
                transition: all 0.2s ease;
                .loader {
                  border-color: map.get(framework.$colors, 'gray-800');
                  border-bottom-color: transparent;
                }
                &.active {
                  border-color: map.get(framework.$colors, 'gray-950');
                  color: map.get(framework.$colors, 'gray-950');
                  background-color: map.get(framework.$colors, 'gray-50');
                }
              }
            }
          }
          &--step-process {
            @include framework.grid-gap(calc(#{framework.$defaultGridGap} * 2));
            .process {
              &__description {
                @include framework.font-style('default', 'gray-800');
              }
              &__statement {
                @include framework.flex-layout(
                  flex,
                  space-between,
                  center,
                  framework.$defaultGridGap
                );
                padding: calc(#{framework.$defaultPadding} * 1.5);
                background-color: map.get(framework.$colors, 'gray-100');
                border-radius: calc(#{framework.$defaultRem} / 2);
                @include framework.font-style('18', 'gray-800');
                font-weight: 600;
                line-height: 1;
              }
              &__button {
                padding-top: calc(#{framework.$defaultPadding} * 1.5);
                button {
                  height: 48px;
                  background-color: map.get(framework.$colors, 'gray-800');
                  @include framework.font-style('default', 'gray-50');
                  font-weight: 600;
                  @include framework.flex-layout(flex, center, center, unset);
                  width: 100%;
                  border-radius: 100vh;
                }
              }
            }
          }
        }
      }
      .external {
        &__form {
          &--step-address {
            .submit {
              &__button {
                &.active {
                  background-color: map.get(framework.$colors, 'gray-800');
                  color: map.get(framework.$colors, 'gray-50');
                }
              }
            }
          }
        }
      }
    }
  }
  &__withdrawal {
    &--complete {
      @include framework.grid-gap(calc(#{framework.$defaultGridGap} * 2));
      max-width: 650px;
      .complete {
        &__description {
          @include framework.font-style('default', 'gray-800');
        }
        &__button {
          padding-top: calc(#{framework.$defaultPadding} * 1.5);
          button {
            width: 100%;
            height: 48px;
            @include framework.flex-layout(flex, center, center, unset);
            background-color: map.get(framework.$colors, 'green-500');
            padding: 0 calc(#{framework.$defaultPadding} * 1.5);
            @include framework.font-style('default ', 'gray-800');
            font-weight: 600;
            border-radius: 100vh;
            transition: all 0.1s ease;
            &:active {
              background-color: map.get(framework.$colors, 'green-800');
              color: map.get(framework.$colors, 'white');
            }
          }
        }
      }
    }
  }
}

.withdraw {
  &__screen {
    @include framework.grid-gap(calc(#{framework.$defaultGridGap} * 1.5));
    user-select: none;
    &--title {
      @include framework.font-style('44', 'gray-800');
      font-weight: 300;
      line-height: 1;
    }
    &--subtitle {
      @include framework.font-style('24', 'gray-400');
    }
    &--text {
      @include framework.font-style('default', 'gray-400');
    }
    &--connect {
      @include framework.grid-column-layout(
        1fr 1fr auto auto,
        calc(#{framework.$defaultGridGap} / 2)
      );
      .connect {
        &__withdraw {
          &--box {
            padding: calc(#{framework.$defaultPadding} * 2);
            background-color: map.get(framework.$colors, 'gray-50');
            border-radius: framework.$defaultRem;
            @include framework.grid-gap(calc(#{framework.$defaultGridGap} / 2));
            grid-template-rows: auto 1fr auto auto;
            border: 2px solid map.get(framework.$colors, 'gray-50');
            transition: border-color 0.1s ease;
            cursor: pointer;
            &:focus,
            &:active {
              border-color: map.get(framework.$colors, 'orange-400');
            }
            .box {
              &__title {
                @include framework.font-style('20', 'gray-800');
                text-transform: uppercase;
              }
              &__text {
                @include framework.font-style('default', 'gray-400');
              }
              &__chain {
                @include framework.flex-layout(
                  flex,
                  center,
                  center,
                  framework.$defaultGridGap
                );
                padding: 0 calc(#{framework.$defaultPadding} / 2);
                &--text {
                  @include framework.font-style('14', 'gray-400');
                  text-transform: uppercase;
                }
                &--network {
                  background-color: map.get(framework.$colors, 'gray-950');
                  border-radius: 2px;
                  @include framework.font-style('10', 'gray-50');
                  padding: calc(#{framework.$defaultPadding} / 4)
                    calc(#{framework.$defaultPadding} / 2);
                  font-weight: 600;
                  @include framework.flex-layout(
                    inline-flex,
                    unset,
                    center,
                    6px
                  );
                }
              }
              &__button {
                button {
                  height: 48px;
                  @include framework.flex-layout(flex, center, center, unset);
                  width: 100%;
                  border-radius: 100vh;
                  @include framework.font-style('default', 'gray-50');
                  font-weight: 500;
                  background-color: map.get(framework.$colors, 'gray-800');
                  .arrow {
                    display: none;
                  }
                }
              }
            }
          }
          &--card {
            position: relative;
            width: 605px;
            height: 360px;
            .card {
              &__image {
                position: absolute;
                width: 100%;
                height: 100%;
                border-radius: 28px;
                background: map.get(framework.$colors, 'gray-950');
              }
              &__logo {
                position: absolute;
                top: 40px;
                right: 40px;
              }
              &__balance {
                position: absolute;
                bottom: 40px;
                left: calc(40px + #{framework.$defaultPadding});
                @include framework.grid-gap(20px);
                &--title {
                  @include framework.font-style('18', 'gray-50');
                }
                &--value {
                  @include framework.flex-layout(
                    inline-flex,
                    unset,
                    flex-end,
                    calc(#{framework.$defaultGridGap} / 1.5)
                  );
                  .value {
                    &__number {
                      @include framework.font-style('55', 'gray-50');
                      line-height: 0.8;
                      font-weight: 500;
                    }
                    &__currency {
                      @include framework.font-style('24', 'gray-50');
                      line-height: 1;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    &--history {
      padding-top: calc(#{framework.$defaultPadding} / 2);
      @include framework.grid-gap(calc(#{framework.$defaultGridGap} * 1.5));
      .history {
        &__title {
          @include framework.font-style('44', 'gray-800');
          font-weight: 300;
          line-height: 1;
        }
        &__list {
          &--empty {
            padding: calc(#{framework.$defaultPadding} * 1.5);
            background-color: map.get(framework.$colors, 'gray-50');
            border: 1px solid map.get(framework.$colors, 'gray-100');
            border-radius: framework.$defaultRem;
            display: grid;
            justify-items: center;
            align-items: center;
            &.loading {
              .loader {
                width: 50px;
                aspect-ratio: 1;
                border-radius: 100vh;
                padding: 1px;
                background: conic-gradient(#0000 10%, #f03355) content-box;
                -webkit-mask:
                  repeating-conic-gradient(
                    #0000 0deg,
                    #000 1deg 20deg,
                    #0000 21deg 36deg
                  ),
                  radial-gradient(
                    farthest-side,
                    #0000 calc(100% - calc(#{framework.$defaultRem} / 2) - 1px),
                    #000 calc(100% - calc(#{framework.$defaultRem} / 2))
                  );
                -webkit-mask-composite: destination-in;
                mask-composite: intersect;
                animation: l4 1s infinite steps(10);
              }
            }
            .empty {
              &__title {
                @include framework.font-style('18', 'gray-400');
                font-weight: 600;
              }
              &__text {
                text-align: center;
                @include framework.font-style('14', 'gray-400');
              }
              &__image {
                padding-bottom: framework.$defaultPadding;
              }
            }
          }
        }
      }
    }
  }
  &__fail {
    @include framework.grid-gap(calc(#{framework.$defaultGridGap} * 2));
    &--description {
      @include framework.font-style('default', 'gray-800');
    }
    &--buttons {
      padding-top: calc(#{framework.$defaultPadding} * 1.5);
      @include framework.grid-column-layout(1fr 1fr, framework.$defaultGridGap);
      align-items: center;
      button {
        border-radius: 100vh;
        height: 48px;
        @include framework.flex-layout(flex, center, center, unset);
        background-color: map.get(framework.$colors, 'gray-100');
        @include framework.font-style('default', 'gray-950');
        font-weight: 600;
        &:active {
          background-color: map.get(framework.$colors, 'gray-200');
        }
      }
      .button {
        &__submit {
          background-color: map.get(framework.$colors, 'gray-800');
          color: map.get(framework.$colors, 'gray-50');
          &:active {
            background-color: map.get(framework.$colors, 'gray-950');
          }
        }
      }
    }
  }
}

.withdrawal {
  &__row {
    &--statement {
      padding: calc(#{framework.$defaultPadding} / 4);
      padding-right: calc(#{framework.$defaultPadding} / 1.5);
      border: 1px solid map.get(framework.$colors, 'gray-100');
      border-radius: framework.$defaultRem;
      background-color: map.get(framework.$colors, 'gray-50');
      @include framework.grid-column-layout(
        auto 1fr auto,
        calc(#{framework.$defaultGridGap} / 2)
      );
      align-items: center;
    }
    &--ready {
      @include framework.grid-column-layout(
        1fr auto,
        calc(#{framework.$defaultGridGap} / 2)
      );
      align-items: center;
      .withdrawal {
        &__icon {
          &--status {
            background-color: map.get(framework.$colors, 'green-500');
          }
        }
      }
    }
    &--complete {
      .withdrawal {
        &__icon {
          &--status {
            background-color: map.get(framework.$colors, 'green-500');
          }
        }
      }
    }
    &--button {
      button {
        background-color: map.get(framework.$colors, 'green-500');
        height: 28px;
        @include framework.flex-layout(flex, center, center, unset);
        padding: 0 calc(#{framework.$defaultPadding} * 1.5);
        @include framework.font-style('10', 'gray-800');
        font-weight: 600;
        border-radius: 100vh;
        transition: all 0.1s ease;
        &:active {
          background-color: map.get(framework.$colors, 'green-800');
          color: map.get(framework.$colors, 'white');
        }
      }
    }
  }
  &__icon {
    width: 48px;
    height: 48px;
    background-color: map.get(framework.$colors, 'white');
    border-radius: calc(#{framework.$defaultRem} / 1.5);
    @include framework.flex-layout(flex, center, center, unset);
    position: relative;
    &--status {
      width: 8px;
      height: 8px;
      border-radius: 100vh;
      background-color: map.get(framework.$colors, 'orange-200');
      position: absolute;
      top: 4px;
      left: 4px;
    }
  }
  &__details {
    &--address {
      @include framework.font-style('14', 'gray-800');
      font-weight: 600;
      @include framework.shorten-text(1);
      word-break: break-all;
    }
    &--date {
      @include framework.font-style('12', 'gray-400');
    }
  }
  &__amount {
    @include framework.font-style('14', 'gray-800');
    font-weight: 600;
    padding-left: 8px;
  }
}

.Toastify {
  .Toastify {
    &__toast-container {
      &--bottom-center {
        .toast {
          &__withdrawal {
            @include framework.font-style('18', 'white');
            font-weight: 300;
          }
        }
      }
    }
  }
}

.external {
  &__form {
    &--info {
      padding: calc(#{framework.$defaultPadding} / 1.5)
        calc(#{framework.$defaultPadding} * 1.5);
      @include framework.grid-column-layout(
        auto 1fr,
        framework.$defaultGridGap
      );
      align-items: center;
      background-color: map.get(framework.$colors, 'blue-100');
      border: 1px solid map.get(framework.$colors, 'blue-200');
      border-radius: framework.$defaultRem;
      .info {
        &__icon {
          display: flex;
          padding: 4px;
          border-radius: 2px;
          background-color: map.get(framework.$colors, 'blue-200');
        }
        &__details {
          &--title {
            @include framework.font-style('14', 'gray-800');
            font-weight: 600;
          }
          &--text {
            @include framework.font-style('14', 'gray-800');
          }
        }
      }
    }
    &--address {
      @include framework.grid-column-layout(
        1fr auto,
        calc(#{framework.$defaultGridGap} / 2)
      );
      align-items: center;
      input {
        width: 100%;
        height: 48px;
        padding: 0 framework.$defaultPadding;
        border-radius: calc(#{framework.$defaultRem} / 2);
        border: 1px solid map.get(framework.$colors, 'gray-100');
        outline: none;
        @include framework.font-style('default', 'gray-800');
        &.error {
          border-color: map.get(framework.$colors, 'red-400');
        }
        &:focus,
        &:focus-within {
          box-shadow: 0 0 0 3px rgba(map.get(framework.$colors, 'black'), 0.25);
          border-color: map.get(framework.$colors, 'gray-950');
        }
      }
      .address {
        &__copy {
          width: 48px;
          height: 48px;
          @include framework.flex-layout(flex, center, center, unset);
          border-radius: 100vh;
          background-color: map.get(framework.$colors, 'gray-100');
          transition: all 0.05s ease;
          svg {
            fill: map.get(framework.$colors, 'gray-800');
            transition: all 0.05s ease;
          }
          &:active {
            background-color: map.get(framework.$colors, 'gray-400');
            svg {
              fill: map.get(framework.$colors, 'white');
            }
          }
        }
        &__input {
          position: relative;
          display: grid;
          align-items: center;
          .reset {
            position: absolute;
            height: 40px;
            width: 32px;
            right: 1px;
            border-radius: 100vh;
            @include framework.flex-layout(flex, center, center, unset);
            background-color: map.get(framework.$colors, 'white');
          }
          small {
            &.error {
              @include framework.font-style('16', 'red-400');
              padding: 0 framework.$defaultPadding;
              position: absolute;
              top: 100%;
            }
          }
        }
      }
    }
    &--description {
      @include framework.grid-gap(framework.$defaultGridGap);
    }
  }
}

@media screen and (min-width: 1200px) {
  .withdraw {
    &__screen {
      &--connect {
        .connect {
          &__withdraw {
            &--box {
              &:hover {
                border-color: map.get(framework.$colors, 'orange-400');
              }
            }
          }
        }
      }
    }
  }
}

@media screen and (max-width: 1200px) {
  .withdraw {
    &__screen {
      &--connect {
        grid-template-columns: 1fr 1fr auto 2fr;
        .connect {
          &__withdraw {
            &--box {
              position: relative;
              .box {
                &__button {
                  position: absolute;
                  top: framework.$defaultRem;
                  right: framework.$defaultRem;
                  button {
                    width: 28px;
                    height: 28px;
                    .button {
                      &__text {
                        display: none;
                      }
                    }
                    .arrow {
                      display: block;
                    }
                  }
                }
                &__chain {
                  padding: unset;
                }
              }
            }
            &--card {
              width: 100%;
              height: 100%;
            }
          }
        }
      }
    }
  }
}

@media screen and (max-width: 991px) {
  .withdraw {
    &__screen {
      &--connect {
        grid-template-columns: unset;
        .spacer {
          display: none;
        }
        .connect {
          &__withdraw {
            &--box {
              grid-template-rows: unset;
              padding: framework.$defaultPadding;
              .box {
                &__chain {
                  justify-content: unset;
                  padding: unset;
                }
              }
            }
            &--card {
              grid-row: 1;
              padding-bottom: calc(#{framework.$defaultPadding} / 2);
              .card {
                &__image {
                  padding: unset;
                  height: auto;
                  position: relative;
                }
                &__balance {
                  bottom: calc(40px + calc(#{framework.$defaultPadding} / 2));
                }
              }
            }
          }
        }
      }
    }
  }
}

@media screen and (max-width: 575px) {
  .home {
    &__button {
      &--connect {
        width: 100%;
      }
    }
    &__box {
      padding: calc(#{framework.$defaultPadding} * 1.5);
      &--title {
        font-size: map.get(framework.$textSizes, '36');
      }
      .account {
        word-break: break-all;
      }
      &--title-wrap {
        grid-template-columns: unset;
        svg {
          grid-row: 1;
        }
      }
      &--button {
        padding-top: calc(#{framework.$defaultPadding} * 2.5);
      }
    }
  }
  .withdraw {
    &__screen {
      &--title {
        font-size: map.get(framework.$textSizes, '36');
      }
      &--connect {
        .connect {
          &__withdraw {
            &--card {
              .card {
                &__balance {
                  left: calc(#{framework.$defaultPadding} * 1.5);
                  bottom: calc(#{framework.$defaultPadding} * 2.5);
                  grid-gap: calc(#{framework.$defaultPadding} / 1.5);
                  &--value {
                    gap: calc(#{framework.$defaultGridGap} / 2);
                    .value {
                      &__number {
                        font-size: map.get(framework.$textSizes, '32');
                      }
                      &__currency {
                        font-size: map.get(framework.$textSizes, '14');
                      }
                    }
                  }
                }
                &__logo {
                  top: 25px;
                  right: 25px;
                }
              }
            }
            &--box {
              .box {
                &__title {
                  padding-right: calc(#{framework.$defaultPadding} * 2.5);
                  font-size: map.get(framework.$textSizes, 'default');
                }
                &__text {
                  font-size: map.get(framework.$textSizes, '12');
                }
                &__chain {
                  &--text {
                    font-size: map.get(framework.$textSizes, '12');
                  }
                }
              }
            }
          }
        }
      }
      &--history {
        .history {
          &__title {
            font-size: map.get(framework.$textSizes, '36');
          }
        }
      }
    }
    &__fail {
      &--buttons {
        grid-gap: 10px;
      }
    }
  }
  .modal {
    &__withdraw {
      &--connected {
        padding-bottom: calc(#{framework.$defaultPadding} * 3);
        border-bottom-right-radius: unset;
        border-bottom-left-radius: unset;
        position: relative;
        box-shadow: 0 -10px 18px -6px map.get(framework.$colors, 'gray-200');
        animation-name: draw-up;
        .connected {
          &__form {
            .modal {
              &__title {
                padding-top: calc(#{framework.$defaultPadding} * 3);
                padding-right: unset;
                text-align: center;
              }
            }
            &--amount {
              .amount {
                &__max {
                  width: 90px;
                }
              }
            }
          }
        }
      }
      &--wrap {
        padding-left: unset;
        padding-right: unset;
        padding-bottom: unset;
        align-items: end;
      }
      &--wrap-complete {
        padding-left: unset;
        padding-right: unset;
        padding-bottom: unset;
        align-items: end;
      }
    }
    &__withdrawal {
      &--complete {
        border-bottom-left-radius: unset;
        border-bottom-right-radius: unset;
        padding-bottom: calc(#{framework.$defaultPadding} * 2);
        .modal {
          &__title {
            padding-top: calc(#{framework.$defaultPadding} * 3);
            padding-right: unset;
            text-align: center;
            font-weight: 600;
          }
        }
      }
    }
  }
  .withdrawal {
    &__row {
      &--ready {
        grid-template-columns: unset;
        grid-gap: unset;
        .withdrawal {
          &__row {
            &--statement {
              border-bottom-right-radius: unset;
              border-bottom-left-radius: unset;
            }
            &--button {
              button {
                width: 100%;
                border-radius: framework.$defaultRem;
                border-top-right-radius: unset;
                border-top-left-radius: unset;
              }
            }
          }
        }
      }
    }
  }
}
